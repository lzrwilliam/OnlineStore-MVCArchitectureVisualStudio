// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectPAW.ContextModels;

#nullable disable

namespace ProiectPAWMvc.Migrations
{
    [DbContext(typeof(ProdusContext))]
    [Migration("20240527140449_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProiectPAW.Models.AlertaPret", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("PretAlerta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("AlertaPret");
                });

            modelBuilder.Entity("ProiectPAW.Models.CosCumparaturi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("CosCumparaturi");
                });

            modelBuilder.Entity("ProiectPAW.Models.Favorite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("ProiectPAW.Models.ProdusVizualizat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataVizualizare")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("ProdusVizualizat", (string)null);
                });

            modelBuilder.Entity("ProiectPAW.Models.Recenzie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataRecenzie")
                        .HasColumnType("datetime2");

                    b.Property<int>("Evaluare")
                        .HasColumnType("int");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<string>("TextRecenzie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Recenzie", (string)null);
                });

            modelBuilder.Entity("ProiectPAW.Models.Utilizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipUtilizator")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.AtributCategorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.ToTable("AtributCategorii");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategorieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParentCategorieID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Produs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stoc")
                        .HasColumnType("int");

                    b.Property<int?>("SubcategorieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("SubcategorieID");

                    b.ToTable("Produs", (string)null);
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.Comanda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataComanda")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalComanda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.DetaliiComanda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("ComandaID")
                        .HasColumnType("int");

                    b.Property<string>("NumeProdus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PretUnitate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProdusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ComandaID");

                    b.HasIndex("ProdusID");

                    b.ToTable("DetaliiComenzi");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.Notificare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Citita")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNotificare")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PretNou")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PretVechi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<string>("ProdusNume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Notificari");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.ValoareAtribut", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AtributCategorieID")
                        .HasColumnType("int");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<string>("Valoare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AtributCategorieID");

                    b.HasIndex("ProdusID");

                    b.ToTable("ValoareAtribute");
                });

            modelBuilder.Entity("ProiectPAW.Models.AlertaPret", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.Models.CosCumparaturi", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.Models.Favorite", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany("Favorite")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.Models.ProdusVizualizat", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.Models.Recenzie", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany("Recenzii")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.AtributCategorie", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Categorie", "Categorie")
                        .WithMany("Atribute")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Categorie", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Categorie", "ParentCategorie")
                        .WithMany("Subcategorii")
                        .HasForeignKey("ParentCategorieID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategorie");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Produs", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Categorie", "Categorie")
                        .WithMany("Produse")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.wwwroot.Models.Categorie", "Subcategorie")
                        .WithMany()
                        .HasForeignKey("SubcategorieID");

                    b.Navigation("Categorie");

                    b.Navigation("Subcategorie");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.Comanda", b =>
                {
                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.DetaliiComanda", b =>
                {
                    b.HasOne("ProiectPAWMvc.Models.Comanda", "Comanda")
                        .WithMany("DetaliiComenzi")
                        .HasForeignKey("ComandaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany("Comenzi")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Comanda");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.Notificare", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.ValoareAtribut", b =>
                {
                    b.HasOne("ProiectPAW.wwwroot.Models.AtributCategorie", "AtributCategorie")
                        .WithMany("ValoriAtribute")
                        .HasForeignKey("AtributCategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectPAW.wwwroot.Models.Produs", "Produs")
                        .WithMany("ValoriAtribute")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AtributCategorie");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.AtributCategorie", b =>
                {
                    b.Navigation("ValoriAtribute");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Categorie", b =>
                {
                    b.Navigation("Atribute");

                    b.Navigation("Produse");

                    b.Navigation("Subcategorii");
                });

            modelBuilder.Entity("ProiectPAW.wwwroot.Models.Produs", b =>
                {
                    b.Navigation("Comenzi");

                    b.Navigation("Favorite");

                    b.Navigation("Recenzii");

                    b.Navigation("ValoriAtribute");
                });

            modelBuilder.Entity("ProiectPAWMvc.Models.Comanda", b =>
                {
                    b.Navigation("DetaliiComenzi");
                });
#pragma warning restore 612, 618
        }
    }
}
